plugins {
    id 'java'
    id "com.jaredsburrows.license" version "0.9.8"
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

dependencies {
    implementation project(':quartz')

    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'org.projectlombok:lombok:1.18.30'

    implementation "org.quartz-scheduler:quartz:$quartzVersion"
    implementation "ch.qos.logback:logback-classic:1.4.14"
    implementation(platform("org.apache.camel:camel-bom:4.4.0")) {
        exclude group: 'com.mchange', module: 'c3p0'
    }
    implementation "org.apache.camel:camel-main"
    implementation "org.apache.camel:camel-endpointdsl"
    implementation("org.apache.camel:camel-quartz") {
        exclude group: 'com.mchange', module: 'c3p0'
    }


    //SpringBoot example
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.camel.springboot:camel-spring-boot-starter:4.4.1'
    implementation 'org.xerial:sqlite-jdbc:3.45.2.0'
    implementation 'org.hibernate.orm:hibernate-community-dialects'
}

tasks.withType(JavaExec).configureEach {
    classpath = sourceSets.main.runtimeClasspath
    group = "run"
}

tasks.register('runExample1', JavaExec) {
    description = 'Run Example 1'
    mainClass = 'com.esentri.quartz.example1.CarbonAwareTriggerExample'
}

tasks.register('runCamelExample', JavaExec) {
    description = 'Run Camel Example'
    mainClass = 'com.esentri.quartz.camelExample.CamelExample'
    systemProperty('org.quartz.properties', 'com/esentri/quartz/camelExample/quartz.properties')
}

tasks.register('runExample2', JavaExec) {
    description = 'Run Example 2 - dry-run feature'
    mainClass = 'com.esentri.quartz.example2.CarbonAwareTriggerDryRunExample'
    systemProperty('org.quartz.properties', 'com/esentri/quartz/example2/quartz.properties')
}

tasks.register('runExample3', JavaExec) {
    description = 'Run Example 3 - statistics'
    mainClass = 'com.esentri.quartz.example3.CarbonAwareTriggerStatisticsExample'
    systemProperty('org.quartz.properties', 'com/esentri/quartz/example3/quartz.properties')
}
